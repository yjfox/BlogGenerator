<%@ Master Language="C#" AutoEventWireup="true" CodeBehind="Site.master.cs" Inherits="BlogGenerator.SiteMaster" %>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">


    <title>BlogGenerator</title>

    <!-- Bootstrap core CSS -->
    <link href="<%=Request.ApplicationPath%>Content/css/bootstrap/bootstrap-responsive.min.css" rel="stylesheet">
    <link href="<%=Request.ApplicationPath%>Content/css/bootstrap/bootstrap.min.css" rel="stylesheet">
    <link href="<%=Request.ApplicationPath%>Content/css/bootstrap/jumbotron-narrow.css" rel="stylesheet">

     <script type="text/javascript" src="<%=Request.ApplicationPath%>Webpage/cytoscape_web/json2.min.js"></script>
<script type="text/javascript" src="<%=Request.ApplicationPath%>Webpage/cytoscape_web/AC_OETags.min.js"></script>
<script type="text/javascript" src="<%=Request.ApplicationPath%>Webpage/cytoscape_web/cytoscapeweb.min.js"></script>

    <script>
        window.onload = function () {
            // id of Cytoscape Web container div
            var div_id = "cytoscapeweb";

            // NOTE: - the attributes on nodes and edges
            //       - it also has directed edges, which will automatically display edge arrows

            //var filepath = "75_visual.xml";
            //var xml = file_get_contents(filepath);
            var xml = '<?xml version="1.0" encoding="UTF-8" standalone="no"?><graphml><key attr.name="label" attr.type="string" for="all" id="label"/><key attr.name="weight" attr.type="double" for="node" id="weight"/><graph edgedefault="directed"><node id="1"><data key="label">blogname:testtitle</data><data key="weight">2.0</data></node><node id="2"><data key="label">Table in database: blog</data><data key="weight">2.0</data></node><node id="3"><data key="label">Submitted to jekyll</data><data key="weight">1.5</data></node><node id="4"><data key="label">Uid is: 1</data><data key="weight">1.0</data></node><node id="5"><data key="label">Sid is:75</data><data key="weight">1.0</data></node><node id="6"><data key="label">hasarticle: 3</data><data key="weight">1.0</data></node><node id="7"><data key="label">hasarticle: 4</data><data key="weight">1.0</data></node><edge id="11" source="2" target="1"><data key="label">wasDerivedFrom</data></edge><edge id="22" source="2" target="3"><data key="label"> </data></edge><edge id="33" source="3" target="1"><data key="label"> </data></edge><edge id="44" source="3" target="4"><data key="label"/></edge><edge id="55" source="3" target="5"><data key="label"> </data></edge><edge id="66" source="6" target="1"><data key="label"> </data></edge><edge id="77" source="7" target="2"><data key="label"> </data></edge></graph></graphml>';


            function rand_color() {
                function rand_channel() {
                    return Math.round(Math.random() * 255);
                }

                function hex_string(num) {
                    var ret = num.toString(16);

                    if (ret.length < 2) {
                        return "0" + ret;
                    } else {
                        return ret;
                    }
                }

                var r = rand_channel();
                var g = rand_channel();
                var b = rand_channel();

                return "#" + hex_string(r) + hex_string(g) + hex_string(b);
            }



            // visual style we will use
            var visual_style = {
                global: {
                    backgroundColor: "#ABCFD6"
                },
                nodes: {
                    shape: {
                        discreteMapper: {
                            attrName: "id",
                            entries: [
                                { attrValue: 1, value: "ELLIPSE" },
                                { attrValue: 2, value: "ELLIPSE" },
                                { attrValue: 3, value: "RECTANGLE" },
                                { attrValue: 4, value: "OCTAGON" },
                                { attrValue: 5, value: "OCTAGON" },
                                { attrValue: 6, value: "PARALLELOGRAM" },
                                { attrValue: 7, value: "PARALLELOGRAM" }
                            ]
                        }
                    },
                    labelFontSize: 13,
                    labelFontWeight: "bold",
                    labelFontStyle: {
                        discreteMapper: {
                            attrName: "id",
                            entries: [
                                { attrValue: 6, value: "italic" },
                                { attrValue: 7, value: "italic" }
                            ]
                        }
                    },
                    borderWidth: 3,
                    borderColor: "#ffffff",

                    size: {
                        defaultValue: 35,
                        continuousMapper: { attrName: "weight", minValue: 35, maxValue: 75 }
                    },

                    color: {
                        discreteMapper: {
                            attrName: "id",
                            entries: [
                                { attrValue: 1, value: "#0B94B1" },
                                { attrValue: 2, value: "#0B94B1" },
                                { attrValue: 3, value: "#dddd00" },
                                { attrValue: 4, value: "#FF00FF" },
                                { attrValue: 5, value: "#FF00FF" }
                            ]
                        }
                    },
                    labelHorizontalAnchor: "center"
                },

                edges: {
                    width: 3,
                    color: "#0B94B1",
                    curvature: 100,
                    style: {
                        discreteMapper: {
                            attrName: "id",
                            entries: [
                                { attrValue: 11, value: "SOLID" },
                                { attrValue: 22, value: "DOT" },
                                { attrValue: 33, value: "DOT" },
                                { attrValue: 44, value: "DOT" },
                                { attrValue: 55, value: "DOT" },
                                { attrValue: 66, value: "LONG_DASH" },
                                { attrValue: 77, value: "LONG_DASH" }
                            ]
                        }
                    },
                    targetArrowShape: {
                        discreteMapper: {
                            attrName: "id",
                            entries: [
                                { attrValue: 11, value: "DELTA" },
                                { attrValue: 22, value: "DELTA" },
                                { attrValue: 33, value: "DELTA" },
                                { attrValue: 44, value: "DELTA" },
                                { attrValue: 55, value: "DELTA" },
                                { attrValue: 66, value: "NONE" },
                                { attrValue: 77, value: "NONE" }
                            ]
                        }
                    }
                }
            };

            // initialization options
            var options = {
                swfPath: "<%=Request.ApplicationPath%>webpage/swf/CytoscapeWeb",
                flashInstallerPath: "<%=Request.ApplicationPath%>webpage/swf/playerProductInstall"
            };

            var layout = {
                name: "Tree",
                options: { breadthSpace: 150 }
            };

            var vis = new org.cytoscapeweb.Visualization(div_id, options);


            vis.ready(function () {

                // add a listener for when nodes and edges are clicked
                document.getElementById("color").onclick = function () {
                    visual_style.global.backgroundColor = rand_color();
                    vis.visualStyle(visual_style);
                };

                document.getElementById("colordefault").onclick = function () {
                    visual_style.global.backgroundColor = "#ABCFD6";
                    vis.visualStyle(visual_style);
                };

                vis.addListener("click", "nodes", function (event) {
                    handle_click(event);
                })
                .addListener("click", "edges", function (event) {
                    handle_click(event);
                });

                function handle_click(event) {
                    var target = event.target;

                    clear();
                    print("event.group = " + event.group);
                    for (var i in target.data) {
                        var variable_name = i;
                        var variable_value = target.data[i];
                        print("event.target.data." + variable_name + " = " + variable_value);
                    }
                }

                function clear() {
                    document.getElementById("note").innerHTML = "";
                }

                function print(msg) {
                    document.getElementById("note").innerHTML += "<p>" + msg + "</p>";
                }
            });

            var draw_options = {
                // your data goes here
                network: xml,

                // show edge labels too
                edgeLabelsVisible: true,

                // let's try another layout
                layout: layout,

                // set the style at initialisation
                visualStyle: visual_style,

                // hide pan zoom
                panZoomControlVisible: true
            };

            vis.draw(draw_options);
        };
        </script>

</head>

<body>
<div class="container">
    <div class="header">
     
        <ul class="nav nav-pills pull-right">
            <li id="index"><a href="index.aspx">Home</a></li>
            <li id="contact"><a href="editUserInfor.aspx">Configuration</a></li>
            <li id="about"><a href="contact.aspx">Contact</a></li>
            <li id="signin" runat="server"><a href="login.aspx"><asp:Label ID="Label_sign" runat="server" Text=""></asp:Label></a></li>
            <li id="register"><a href="register.aspx"><asp:Label ID="Label_register" runat="server" Text=""></asp:Label></a></li>
            <li id="useremail"> <asp:Label ID="Label_Name" runat="server" Text=""></asp:Label></li>
            
        </ul>
          
        <h3 class="text-muted">Final Project</h3>
    </div>
    <div id="show">
         <asp:contentplaceholder id="MainContent" runat="server">                
         </asp:contentplaceholder>             
    </div> 
</div>
  
</body>
</html>